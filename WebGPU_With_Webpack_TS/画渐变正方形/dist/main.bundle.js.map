{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://webgpu01/./src/helper.ts","webpack://webgpu01/./src/main.ts","webpack://webgpu01/./src/shaders.ts","webpack://webgpu01/webpack/bootstrap","webpack://webgpu01/webpack/before-startup","webpack://webgpu01/webpack/startup","webpack://webgpu01/webpack/after-startup"],"sourcesContent":["export const CreateGPUBufferUint = (device:GPUDevice, data:Uint32Array, \n    usageFlag:GPUBufferUsageFlags = GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST) => {\n    const buffer = device.createBuffer({\n        size: data.byteLength,\n        usage: usageFlag,\n        mappedAtCreation: true\n    });\n    new Uint32Array(buffer.getMappedRange()).set(data);\n    buffer.unmap();\n    return buffer;\n}\n\nexport const CreateGPUBuffer = (device:GPUDevice, data:Float32Array, \n    usageFlag:GPUBufferUsageFlags = GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST) => {\n    const buffer = device.createBuffer({\n        size: data.byteLength,\n        usage: usageFlag,\n        mappedAtCreation: true\n    });\n    new Float32Array(buffer.getMappedRange()).set(data);\n    buffer.unmap();\n    return buffer;\n}\n\nexport const InitGPU = async () => {\n    const checkgpu = CheckWebGPU();\n    if(checkgpu.includes('Your current browser does not support WebGPU!')){\n        console.log(checkgpu);\n        throw('Your current browser does not support WebGPU!');\n    }\n    const canvas = document.getElementById('canvas-webgpu') as HTMLCanvasElement;\n    const adapter = await navigator.gpu?.requestAdapter();\n    const device = await adapter?.requestDevice() as GPUDevice;\n    const context = canvas.getContext('webgpu') as unknown as GPUCanvasContext;\n\n    /*const devicePixelRatio = window.devicePixelRatio || 1;\n    const size = [\n        canvas.clientWidth * devicePixelRatio,\n        canvas.clientHeight * devicePixelRatio,\n    ];*/\n    //const format = context.getPreferredFormat(adapter!);\n    const format = navigator.gpu.getPreferredCanvasFormat();\n    context.configure({\n        device: device,\n        format: format,\n        //size: size\n        alphaMode:'opaque'\n    });\n    return{ device, canvas, format, context };\n};\n\n/*export const InitGPU = async () => {\n    const checkgpu = CheckWebGPU();\n    if(checkgpu.includes('Your current browser does not support WebGPU!')){\n        console.log(checkgpu);\n        throw('Your current browser does not support WebGPU!');\n    }\n    const canvas = document.getElementById('canvas-webgpu') as HTMLCanvasElement;\n    const adapter = await navigator.gpu?.requestAdapter();\n    const device = await adapter?.requestDevice() as GPUDevice;\n    const context = canvas.getContext('gpupresent') as unknown as GPUCanvasContext;\n    const swapChainFormat = 'bgra8unorm';\n    const swapChain = context.configureSwapChain({\n        device: device,\n        format: swapChainFormat\n    });\n    return{device, canvas, swapChainFormat, swapChain };\n}*/\n\nexport const CheckWebGPU = () => {\n    let result = 'Great, your current browser supports WebGPU!';\n        if (!navigator.gpu) {\n           result = `Your current browser does not support WebGPU! Make sure you are on a system \n                     with WebGPU enabled. Currently, SPIR-WebGPU is only supported in  \n                     <a href=\"https://www.google.com/chrome/canary/\">Chrome canary</a>\n                     with the flag \"enable-unsafe-webgpu\" enabled. See the \n                     <a href=\"https://github.com/gpuweb/gpuweb/wiki/Implementation-Status\"> \n                     Implementation Status</a> page for more details.                   \n                    `;\n        } \n    return result;\n}","import { LoaderOptionsPlugin } from 'webpack';\nimport { InitGPU, CreateGPUBuffer, CreateGPUBufferUint } from './helper';\nimport { Shaders } from './shaders';\n\nconst CreateSquare = async () => {\n    const gpu = await InitGPU();\n    const device = gpu.device;\n\n    const vertexData = new Float32Array([\n        //position    //color\n       -0.5, -0.5,    1, 0, 0,  // vertex a, index = 0\n        0.5, -0.5,    0, 1, 0,  // vertex b, index = 1\n        0.5,  0.5,    0, 0, 1,  // vertex c, index = 2  \n       -0.5,  0.5,    1, 1, 0   // vertex d, index = 3        \n    ]);\n\n    const indexData = new Uint32Array([0, 1, 3, 3, 1, 2]);\n   \n    const vertexBuffer = CreateGPUBuffer(device, vertexData);\n    const indexBuffer = CreateGPUBufferUint(device, indexData);\n    \n    const shader = Shaders();\n    const pipeline = device.createRenderPipeline({\n        layout:'auto',\n        vertex: {\n            module: device.createShaderModule({                    \n                code: shader.vertex\n            }),\n            entryPoint: \"main\",\n            buffers:[\n                {\n                    arrayStride: 4*(2+3),\n                    attributes: [{\n                        shaderLocation: 0,\n                        format: \"float32x2\",\n                        offset: 0\n                    },\n                    {\n                        shaderLocation: 1,                        \n                        format: 'float32x3',\n                        offset: 8,\n                    }\n                    ]\n                }\n            ]\n        },\n        fragment: {\n            module: device.createShaderModule({                    \n                code: shader.fragment\n            }),\n            entryPoint: \"main\",\n            targets: [\n                {\n                    format: gpu.format as GPUTextureFormat\n                }\n            ]\n        },\n        primitive:{\n            topology: \"triangle-list\",\n        }\n    });\n\n    const commandEncoder = device.createCommandEncoder();\n    const textureView = gpu.context.getCurrentTexture().createView();\n    const renderPass = commandEncoder.beginRenderPass({\n        colorAttachments: [{\n            view: textureView,\n            clearValue: { r: 0.5, g: 0.5, b: 0.8, a: 1.0 }, //background color\n            storeOp: 'store',\n            loadOp:'clear'\n        }]\n    });\n    renderPass.setPipeline(pipeline);\n    renderPass.setVertexBuffer(0, vertexBuffer);\n    renderPass.setIndexBuffer(indexBuffer, \"uint32\");\n\n    renderPass.drawIndexed(6);\n    renderPass.end();\n\n    device.queue.submit([commandEncoder.finish()]);\n}\n\nCreateSquare();\n\n\n\n\n","export const Shaders = () => {\n    const vertex = `\n        struct Output {\n            @builtin(position) Position : vec4<f32>,\n            @location(0) vColor : vec4<f32>,\n        };\n        @vertex\n        fn main(@location(0) pos: vec4<f32>, @location(1) color: vec4<f32>) -> Output {\n            var output: Output;\n            output.Position = pos;\n            output.vColor = color;\n            return output;\n        }`;\n\n    const fragment = `\n        @fragment\n        fn main(@location(0) vColor: vec4<f32>) -> @location(0) vec4<f32> {\n            return vColor;\n        }`;\n\n    return {\n        vertex, \n        fragment\n    };\n}\n\nexport const ShadersOld = () => {\n    const vertex = `\n        [[location(0)]] var<in> position : vec4<f32>;\n        [[location(1)]] var<in> color : vec4<f32>;\n        [[builtin(position)]] var<out> Position : vec4<f32>;\n        [[location(0)]] var<out> vColor : vec4<f32>;\n\n        [[stage(vertex)]]\n        fn main() -> void {\n            Position = position;\n            vColor = color;\n            return;\n        }`;\n\n    const fragment = `\n        [[location(0)]] var<in> vColor : vec4<f32>;\n        [[location(0)]] var<out> fragColor : vec4<f32>;\n\n        [[stage(fragment)]]\n        fn main() -> void {\n            fragColor = vColor;\n            return;\n        }`;\n\n    return {\n        vertex, \n        fragment\n    };\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/main.ts\");\n",""],"names":[],"sourceRoot":""}